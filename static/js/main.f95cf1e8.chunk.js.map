{"version":3,"sources":["features/Employee.js","features/Employeelist.js","features/Login.js","components/Navigationbar.js","components/Sidebar.js","pages/Dashboard.js","pages/Login.js","components/UpdateEmployee.js","components/Employee.js","components/EmployeeList.js","components/CreateEmployee.js","App.js","index.js"],"names":["empSlice","createSlice","name","initialState","value","id","employeeName","employeeEmail","employeeDOB","employeeImage","selectedEmployee","edit","reducers","addEmployee","state","arguments","length","undefined","action","push","payload","selectEmployee","Object","objectSpread","editForm","deleteEmployee","filter","employee","updateEmployee","map","actions","loginSlice","isLogin","loginAction","connect","console","log","loginStatus","login","dispatch","useDispatch","navigate","useNavigate","react_default","a","createElement","esm_Navbar","bg","Container","Brand","href","Toggle","Collapse","className","Text","Fragment","Button","onClick","Sidebar","react_router_dom","to","Dashboard","components_Navigationbar","components_Sidebar","react_router","Login","validation","Yup","shape","email","required","password","min","matches","formik_esm","validationSchema","initialValues","onSubmit","values","submit","_ref","errors","touched","handleChange","handleBlur","handleSubmit","noValidate","type","onChange","onBlur","placeholder","updateEmployees","employees","editPage","_useState","useState","_useState2","slicedToArray","show","setShow","handleClose","_useState3","_useState4","newEmployeeName","setNewEmployeeName","_useState5","_useState6","newEmployeeEmail","setNewEmployeeEmail","_useState7","_useState8","newEmployeeDOB","setNewEmployeeDOB","_useState9","_useState10","newEmployeeImage","setNewEmployeeImage","event","target","variant","Modal","onHide","Header","closeButton","Title","Footer","selectEmp","employeeList","components_UpdateEmployee","Card","style","width","Img","src","Body","ListGroup","Item","Table","striped","bordered","hover","components_Employee","setEmployeeName","setEmployeeEmail","setEmployeeDOB","setEmployeeImage","e","Math","floor","random","preventDefault","App","path","element","pages_Dashboard","components_EmployeeList","components_CreateEmployee","src_pages_Login","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","configureStore","reducer","employeeReducer","loginReducer","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.f95cf1e8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nimport { EmpData } from \"./Employeelist\";\r\n \r\n\r\nexport const empSlice=createSlice({\r\n    name:\"employees\",\r\n    initialState: { value: EmpData,selectedEmployee:null,edit:false},\r\n    reducers:{\r\n        addEmployee:(state=[],action)=>{\r\n        state.value.push(action.payload);\r\n        },\r\n       \r\n        selectEmployee:(state=null,action)=>{\r\n          return {...state, selectedEmployee: action.payload}\r\n          },\r\n          editForm:(state,action)=>{\r\n            state.edit=(action.payload);\r\n          },\r\n        deleteEmployee: (state, action) => {\r\n            state.value = state.value.filter((employee) => employee.id !== action.payload.id);\r\n          },\r\n\r\n          updateEmployee: (state, action) => {\r\n            state.value.map((employee) => {\r\n              if (employee.id === action.payload.id) {\r\n                employee.employeeName = action.payload.employeeName;\r\n                employee.employeeEmail=action.payload.employeeEmail;\r\n                employee.employeeImage=action.payload.employeeImage;\r\n            }\r\n        }\r\n        );\r\n      },\r\n    },\r\n    \r\n\r\n  });\r\n\r\n  export const { addEmployee,selectEmployee, deleteEmployee, updateEmployee ,editForm} = empSlice.actions;\r\nexport default empSlice.reducer;\r\n","export const EmpData = [\r\n    {\r\n      id: 1,\r\n      employeeName: \"Leanne Graham\",\r\n      employeeEmail: \"Bret@gmail.com\",\r\n      employeeDOB:'2022-09-26',\r\n      employeeImage:\"https://i.picsum.photos/id/0/5616/3744.jpg?hmac=3GAAioiQziMGEtLbfrdbcoenXoWAW-zlyEAMkfEdBzQ\"\r\n    },\r\n    {\r\n      id: 2,\r\n      employeeName: \"ABC\",\r\n      employeeEmail: \"Abc@gmail.com\",\r\n      employeeDOB:'2021-04-26',\r\n      employeeImage:\"https://i.picsum.photos/id/1/5616/3744.jpg?hmac=kKHwwU8s46oNettHKwJ24qOlIAsWN9d2TtsXDoCWWsQ\"\r\n    },\r\n    {\r\n      id: 3,\r\n      employeeName: \"bbbb\",\r\n      employeeEmail: \"bbbb@gmail.com\",\r\n      employeeDOB:'2004-09-3',\r\n      employeeImage:\"https://i.picsum.photos/id/10/2500/1667.jpg?hmac=J04WWC_ebchx3WwzbM-Z4_KC_LeLBWr5LZMaAkWkF68\"\r\n    },\r\n    \r\n];","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst init = {\r\n    isLogin: false\r\n  };\r\n\r\nexport const loginSlice=createSlice({\r\n    name:\"login\",\r\n    initialState:{value:init},\r\n    reducers:{\r\n\r\n        loginAction:(state,action)=>{\r\n            state.value=(action.payload);\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const {loginAction}=loginSlice.actions;\r\nexport default loginSlice.reducer;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { connect } from 'react-redux';\r\nimport { loginAction } from '../features/Login';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\n\r\n\r\nconst Navigationbar = (loginStatus) => {\r\n  const dispatch=useDispatch();\r\n  const navigate=useNavigate();\r\n  const navigateToEmployeeList = () => {\r\n    // 👇️ navigate to /empoyeeList\r\n    dispatch(loginAction(false));\r\n    navigate('/login');\r\n  };\r\n\r\n \r\n  return ( \r\n\r\n    \r\n    <Navbar bg=\"primary\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n          {/* <Link to=\"/login\">Login</Link> */}\r\n\r\n\r\n            {loginStatus ?\r\n              <>\r\n              <Button className='btn btn-primary' onClick={navigateToEmployeeList}\r\n               >\r\n                 LogOut\r\n               </Button>\r\n               \r\n             </>\r\n           :\r\n            \r\n            \"\"\r\n            \r\n          }\r\n             \r\n          \r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return {\r\n    loginStatus:state.login.value,\r\n  \r\n  }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps,{loginAction})(Navigationbar);\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './sidebar.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n \r\n\r\n  <div className='sidebar'>\r\n    <a ><Link to=\"/\"> Home</Link></a>\r\n    <a ><Link to=\"/employeeList\"> Employees</Link></a>\r\n    <a ><Link to=\"/employeeList\"> Contact</Link></a>\r\n    <a ><Link to=\"/employeeList\"> More</Link></a>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","import { connect } from 'react-redux';\r\nimport React from 'react';\r\n\r\n\r\n import { Outlet, Link } from \"react-router-dom\";\r\nimport Navigationbar from '../components/Navigationbar';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n\r\n  <>\r\n  \r\n      \r\n    <body className='body'>\r\n    <Navigationbar />\r\n      <Sidebar/>\r\n       \r\n      </body>\r\n\r\n        <Outlet />\r\n\r\n    </>\r\n  )\r\n};\r\n\r\n// const mapStateToProps=({login:{isLogin}})=>({\r\n//   isLogin,\r\n// })\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Login.css';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginAction } from \"../features/Login\";\r\n\r\nfunction Login() {\r\n  const navigate=useNavigate();\r\n  const navigateToEmployeeList = () => {\r\n    // 👇️ navigate to /empoyeeList\r\n    navigate('/employeeList');\r\n  };\r\n\r\n  const validation = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is a required field\")\r\n      .email(\"Invalid email format\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\r\n      ),\r\n  });\r\n\r\n  const dispatch=useDispatch();\r\n \r\n  return (\r\n    <div>\r\n         <Formik\r\n            validationSchema={validation}\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            onSubmit={(values) => {\r\n              console.log(values);\r\n             \r\n              const submit={\r\n                isLogin:true,\r\n                email:values.email\r\n              };\r\n             \r\n               dispatch(loginAction(submit));\r\n               navigateToEmployeeList();\r\n             \r\n               \r\n              }\r\n            }\r\n        >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n         \r\n        }) => (\r\n          <div className=\"login\">\r\n            <div className=\"form\">\r\n\r\n              <form noValidate  onSubmit={handleSubmit}>\r\n                <span>LOGIN</span><br/>\r\n         \r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.email}\r\n                  placeholder=\"Enter email id \"\r\n                  \r\n                  id=\"email\"\r\n                />\r\n\r\n                <p className=\"error\">\r\n                  {errors.email && touched.email && errors.email}\r\n                </p>\r\n                \r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.password}\r\n                  placeholder=\"Enter password\"\r\n                  \r\n                />\r\n                \r\n                <p className=\"error\">\r\n                  {errors.password && touched.password && errors.password}\r\n                </p>\r\n               \r\n                <button type=\"submit\">Login </button>\r\n\r\n             \r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n        </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { selectEmployee, updateEmployee ,editForm} from '../features/Employee';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport \"./UpdateEmployee.css\"\r\n\r\n\r\nfunction UpdateEmployee({updateEmployees}) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // add employees state to employeelist .same as maptostateProps\r\n    // const updateEmployees = useSelector((state) => );\r\n  \r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const updateEmployeeDetails=()=>{\r\n      dispatch(\r\n        updateEmployee({ id: updateEmployees.id,employeeName: newEmployeeName,\r\n          employeeEmail: newEmployeeEmail,employeeDOB: newEmployeeDOB,employeeImage:newEmployeeImage})\r\n      );\r\n      dispatch(selectEmployee({ id: updateEmployees.id,employeeName: newEmployeeName,\r\n        employeeEmail: newEmployeeEmail,employeeDOB: newEmployeeDOB,employeeImage:newEmployeeImage}));\r\n                     \r\n        dispatch(editForm({ edit:false}));\r\n     \r\n    }\r\n        \r\n    const[newEmployeeName,setNewEmployeeName]=useState(updateEmployees.employeeName);\r\n    const [newEmployeeEmail, setNewEmployeeEmail] = useState(updateEmployees.employeeEmail);\r\n    const [newEmployeeDOB, setNewEmployeeDOB] = useState(updateEmployees.employeeDOB);\r\n    const [newEmployeeImage, setNewEmployeeImage] = useState(updateEmployees.employeeImage);\r\n\r\n  return (\r\n    <div>\r\n\r\n            <h4>Update Employee</h4>\r\n             <input className=' '\r\n              type=\"text\"\r\n              value={newEmployeeName}\r\n              placeholder=\"New Employee name...\"\r\n              onChange={(event) => {\r\n                setNewEmployeeName(event.target.value);\r\n              }}\r\n           \r\n            /><br/>\r\n            <input className=''\r\n              type=\"email\"\r\n              placeholder=\"email...\"\r\n              value={newEmployeeEmail}\r\n              onChange={(event) => {\r\n                setNewEmployeeEmail(event.target.value);\r\n              }}\r\n            \r\n            /><br/>\r\n            <input className=''\r\n              type=\"date\"\r\n              value={newEmployeeDOB}\r\n              placeholder=\"New Employee DOB...\"\r\n              onChange={(event) => {\r\n                setNewEmployeeDOB(event.target.value);\r\n              }}\r\n          \r\n            /><br/>\r\n            <input className='mt-2'\r\n              type=\"text\"\r\n              value={newEmployeeImage}\r\n              placeholder=\"New Employee Image..\"\r\n              onChange={(event) => {\r\n                setNewEmployeeImage(event.target.value);\r\n              }}\r\n          \r\n            /><br/>\r\n\r\n            <Button className='mt-2' variant=\"primary\" onClick={handleShow}>\r\n                Update Employee\r\n             </Button>\r\n             <Button onClick={() => {\r\n                          \r\n                          dispatch(editForm({ edit:false}));\r\n                        }} \r\n                 className='mt-2' variant=\"primary\" >\r\n                Cancel\r\n             </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Confirm Update</Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\"  \r\n                    onClick={updateEmployeeDetails}\r\n                    >\r\n                    Confirm\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return {\r\n    updateEmployees:state.employees.selectedEmployee,\r\n    editPage:state.employees.edit,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{updateEmployee,selectEmployee,editForm}) (UpdateEmployee);\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nimport {deleteEmployee, updateEmployee} from '../features/Employee';\r\nimport { editForm } from '../features/Employee';\r\nimport { selectEmployee } from '../features/Employee';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport UpdateEmployee from './UpdateEmployee';\r\n\r\n\r\n\r\nfunction Employee({selectEmp,editPage}) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n  // const selectEmployee = useSelector((state) => state.employees.selectedEmployee);\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const deleteEmp=()=>{\r\n    dispatch(deleteEmployee({ id: selectEmp.id }));\r\n      dispatch(selectEmployee(null));\r\n      handleClose();\r\n  }\r\n\r\n  return (\r\n      \r\n          <div className='employeeDetails'>\r\n              \r\n                  { selectEmp && \r\n                  \r\n                  <div>\r\n                    {editPage.edit ?\r\n\r\n                    <UpdateEmployee/>\r\n                     \r\n                      :\r\n                      <div>\r\n                      <Card style={{ width: '18rem' }}>\r\n                      <Card.Img variant=\"top\" src={selectEmp.employeeImage} />\r\n                      <Card.Body>\r\n                        <Card.Title>Employee details</Card.Title>\r\n                        \r\n                      </Card.Body>\r\n                      <ListGroup className=\"list-group-flush\">\r\n                        <ListGroup.Item>Name :{selectEmp.employeeName}</ListGroup.Item>\r\n                        <ListGroup.Item>Email :{selectEmp.employeeEmail}</ListGroup.Item>\r\n                        <ListGroup.Item>Date Of Birth :{selectEmp.employeeDOB}</ListGroup.Item>\r\n                      </ListGroup>\r\n                    \r\n                    </Card>\r\n                  \r\n                  <Button className='mt-2' variant=\"primary\" onClick={handleShow}>\r\n                    delete\r\n                    </Button>\r\n\r\n                    <Modal show={show} onHide={handleClose}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Confirm delete</Modal.Title>\r\n                      </Modal.Header>\r\n                      \r\n                      <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                          Close\r\n                        </Button>\r\n                        \r\n                        <Button variant=\"primary\"  onClick={deleteEmp}>\r\n                          Confirm\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                        \r\n                    <Button  onClick={() => {\r\n                          \r\n                          dispatch(editForm({ edit:true}));\r\n                        }} \r\n                            className='mt-2' variant=\"primary\" >\r\n                      Edit\r\n                    </Button>\r\n                    </div>\r\n        \r\n                      \r\n                        }\r\n                    \r\n              </div>\r\n       \r\n   }\r\n\r\n\r\n</div>\r\n\r\n   \r\n    )\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return {\r\n    selectEmp:state.employees.selectedEmployee,\r\n    editPage:state.employees.edit,\r\n    employeeList:state.employees.value\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{deleteEmployee,editForm,selectEmployee}) (Employee)\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport Employee from './Employee';\r\nimport { selectEmployee } from '../features/Employee';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nimport './Employeelist.css'\r\n\r\n\r\nfunction EmployeeList({employeeList}) {\r\n\r\n\r\n  //used for calling action\r\n  const dispatch = useDispatch();\r\n\r\n  // add employees state to employeelist .same as maptostateProps\r\n  // const employeeList = useSelector((state) => state.employees.value);\r\n\r\n  // console.log(employeeList);\r\n\r\n\r\n  return (\r\n            <>\r\n            <div className='mainEmployeeComponent'>\r\n              <Link to=\"/createemployee\"><Button className=' button mt-6 '>Add New Employee</Button></Link> \r\n                  <div className='components'>\r\n                    <div className='employeelist'>  \r\n                      <h2 className=\"m-3 \">Employee List</h2>\r\n\r\n                        <Table className='cards'   striped bordered hover>\r\n                            <thead >\r\n                              <tr >\r\n                              <th>Employee id</th>\r\n                                <th>Employee Name</th>\r\n                                <th> Email</th>\r\n                              </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {employeeList.map((employee)=>{\r\n                              return(\r\n                              \r\n                                  <tr onClick={()=>dispatch(selectEmployee(employee))}>\r\n                                    <td>{employee.id}  </td>\r\n                                    <td>{employee.employeeName}  </td>\r\n                                    <td>{employee.employeeEmail}</td>\r\n                                    \r\n                                  </tr>\r\n\r\n\r\n                                )\r\n                                    })}\r\n                        </tbody>\r\n                          \r\n                        </Table>\r\n\r\n                  \r\n                        </div>\r\n\r\n               <div className='employee'>\r\n                 <Employee/>\r\n                </div>\r\n          \r\n             \r\n              </div>\r\n          </div>\r\n\r\n          </>\r\n          \r\n                \r\n           \r\n           \r\n     \r\n      \r\n      \r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return {\r\n    employeeList:state.employees.value\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{selectEmployee}) (EmployeeList)\r\n\r\n\r\n\r\n// update and delete\r\n {/* <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"New Employee name...\"\r\n                onChange={(event) => {\r\n                  setNewEmployeeName(event.target.value);\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"New Employee email...\"\r\n                onChange={(event) => {\r\n                  setNewEmployeeEmail(event.target.value);\r\n                }}\r\n              /> */}\r\n              {/* <input\r\n                type=\"text\"\r\n                placeholder=\"New Employee DOB...\"\r\n                onChange={(event) => {\r\n                  setNewEmployeeDOB(event.target.value);\r\n                }}\r\n              /> */}\r\n              {/* <button\r\n                onClick={() => {\r\n                  dispatch(\r\n                    updateEmployee({ id: employees.id,employeeName: newEmployeeName,\r\n                      employeeEmail: newEmployeeEmail})\r\n                  );\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Update Employee\r\n              </button>\r\n              </div>\r\n\r\n\r\n            \r\n              <button onClick={() => {\r\n                  dispatch(deleteEmployee({ id: employees.id }));\r\n                }}>Delete</button>\r\n           \r\n              <div> */}","import React,{useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addEmployee } from '../features/Employee';\r\nimport { connect } from 'react-redux';\r\nimport {useNavigate}  from 'react-router-dom';\r\n\r\n\r\nimport './CreateEmployee.css'\r\n\r\n\r\n\r\nfunction CreateEmployee() {\r\n  const dispatch = useDispatch();\r\n  const navigate=useNavigate();\r\n  //  const employeeList = useSelector((state) => state.employees.value);\r\n  const navigateToEmployeeList = () => {\r\n    // 👇️ navigate to /empoyeeList\r\n    navigate('/employeeList');\r\n  };\r\n\r\n  const[employeeName,setEmployeeName]=useState(\"\");\r\n  const [employeeEmail, setEmployeeEmail] = useState(\"\");\r\n  const [employeeDOB, setEmployeeDOB] = useState(\"\");\r\n  const [employeeImage, setEmployeeImage] = useState(\"\");\r\n\r\n  return (\r\n   <div className='form'>\r\n        \r\n      \r\n      \r\n        <div>\r\n          <h3>Add Employee Form</h3>\r\n      \r\n            <input type=\"text\" \r\n            placeholder='employee name'  \r\n            onChange={(event) => {\r\n              setEmployeeName(event.target.value);\r\n            }} /><br/>\r\n            <input \r\n            type=\"email\" \r\n            placeholder='employee email'  \r\n            onChange={(event) => {\r\n              setEmployeeEmail(event.target.value);\r\n            }}/><br/>\r\n             <input \r\n            type=\"date\" \r\n            placeholder='employee date of birth'  \r\n            onChange={(event) => {\r\n              setEmployeeDOB(event.target.value);\r\n            }}/><br/><br/>\r\n             <input \r\n            type=\"text\" \r\n            placeholder='employee Image'  \r\n            onChange={(event) => {\r\n              setEmployeeImage(event.target.value);\r\n            }}/><br/><br/>\r\n            {/* <input type=\"date\" placeholder='employee name'  onChange={this.handleChange} /><br/> */}\r\n            <button onClick={(e) => {\r\n              dispatch(\r\n              addEmployee({\r\n                id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\r\n                employeeName,\r\n                employeeEmail,\r\n                employeeDOB,\r\n                employeeImage,\r\n              })\r\n              );\r\n              navigateToEmployeeList();\r\n            e.preventDefault();\r\n          }} >\r\n            Add\r\n            </button>\r\n        \r\n          \r\n        </div>\r\n      </div>\r\n  )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return {\r\n    employeeList:state.employees.value\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{addEmployee}) (CreateEmployee)\r\n\r\n\r\n\r\n// const validation = Yup.object().shape({\r\n//     name: Yup.string()\r\n//     .required(\"Name is a required field\"),\r\n//     email: Yup.string()\r\n//     .required(\"Email is a required field\")\r\n//     .email(\"Invalid email format\"),\r\n//     dateOfBirth: Yup.string()\r\n//       .required(\"DOB is a required field\")\r\n//       ,\r\n      \r\n      \r\n//   });\r\n\r\n// const CreateEmployee = () => {\r\n//   return (\r\n//     <>\r\n    \r\n//     <Formik\r\n//         validationSchema={validation}\r\n//         initialValues={{ name: \"\", email: \"\",dateOfBirth:\"\",file : null }}\r\n//         onSubmit={(values) => {\r\n//         console.log(values);\r\n//         }}\r\n//     >\r\n//     {({\r\n//       values,\r\n//       errors,\r\n//       touched,\r\n//       handleChange,\r\n//       handleBlur,\r\n//       handleSubmit,\r\n//     }) => (\r\n//       <div className=\"Enployee\">\r\n//         <div className=\"form\">\r\n\r\n//           <form noValidate onSubmit={handleSubmit}>\r\n//             <span>Add New Employee</span><br/>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               onChange={handleChange}\r\n//               onBlur={handleBlur}\r\n//               value={values.name}\r\n//               placeholder=\"Enter Name\"\r\n              \r\n//               id=\"name\"\r\n//             />\r\n//              <p className=\"error\">\r\n//               {errors.name && touched.name && errors.name}\r\n//             </p>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               onChange={handleChange}\r\n//               onBlur={handleBlur}\r\n//               value={values.email}\r\n//               placeholder=\"Enter email id \"\r\n              \r\n//               id=\"email\"\r\n//             />\r\n\r\n//             <p className=\"error\">\r\n//               {errors.email && touched.email && errors.email}\r\n//             </p>\r\n//             <input \r\n//              name=\"dateofbirth\" \r\n//              type=\"date\" \r\n//              onChange={handleChange}\r\n//              onBlur={handleBlur}\r\n//              value={values.dateOfBirth}\r\n//              placeholder=\"Enter DOB \"/> <br/> <br/>\r\n//             <label style={{color:\"blue\"}}>Upload Image </label>\r\n//             <input \r\n//              type=\"file\"\r\n//              name=\"file\"\r\n//              onChange={handleChange}\r\n//              onBlur={handleBlur}\r\n//              value={values.file} />\r\n//              <br/>\r\n            \r\n//             <button type=\"submit\">Add</button>\r\n\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     )}\r\n//     </Formik>\r\n// </>\r\n//   )\r\n// }\r\n\r\n","import React from 'react';\nimport {BrowserRouter,Routes,Route} from 'react-router-dom';\n\n\nimport Dashboard from './pages/Dashboard';\n\nimport './App.css';\nimport Login from './pages/Login';\nimport EmployeeList from './components/EmployeeList';\nimport CreateEmployee from './components/CreateEmployee';\nimport Employee from './components/Employee';\n\n\n\nfunction App() {\n  return (\n    <>\n \n <BrowserRouter>\n        \n         <Routes>\n            <Route path=\"/\" element={<Dashboard />}>\n              <Route path=\"employeeList\" element={<EmployeeList />} />\n              <Route path=\"createemployee\" element={<CreateEmployee />} />\n              <Route path=\"employee\" element={<Employee />} />\n\n            </Route>\n            \n            <Route path=\"login\" element={<Login />} />\n          </Routes>\n          </BrowserRouter>\n     \n       </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport { Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport employeeReducer from \"./features/Employee\";\nimport loginReducer from \"./features/Login\";\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store=configureStore({\n    reducer:{\n        employees:employeeReducer,\n        login:loginReducer,\n      \n    }\n},composeEnhancers());\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n      \n        <App />\n     \n    </Provider>\n);\n\n\n"],"sourceRoot":""}